@use 'mixin/focus';
@use 'mixin/form';
@use 'variable';

@use 'sass:math';

$form-input-min-height: math.div(
      variable.$form-input-height,
      variable.$form-input-font-size
   ) *
   1em;

%select-base {
   @include form.form-input-defaults;
   min-height: $form-input-min-height;
}

// ----- Basic Select ---- //
// The most plain styling, Safari will render this with gradient background.

.env-form select,
select.env-form-input {
   @extend %select-base;
   @include focus.focus-visible;
}

.env-form select[multiple],
select[multiple].env-form-input,
.env-form-multiple-select select[multiple] {
   // .env-form-multiple-select is deprecated
   min-height: 2.75em;
   height: auto;
   padding: var(--env-spacing-xx-small);

   @supports (-webkit-touch-callout: none) {
      // (hack) iOS specific styling for prettier select[multiple]
      height: 2.75em;
      padding: variable.$form-padding-y variable.$form-padding-x;
   }

   > option {
      padding: var(--env-spacing-x-small);
   }
}

@supports (background: -webkit-named-image(i)) {
   // Hack for Safari only to set height of native select
   .env-form select:not([multiple]),
   select.env-form-input:not([multiple]) {
      height: $form-input-min-height;
   }
}

// ----- Select Component ---- //
// Select wrapped in a div with class "env-form-select".
// Rendered the same in all browsers. Icon may use a custom SVG.

.env-form-select {
   @extend %select-base;
   position: relative;
   padding: 0;

   @include focus.focus-within;

   select:not([multiple]),
   select.env-form-input {
      display: block;
      width: 100%;
      background: none;
      border: none;
      border-radius: var(--env-form-input-border-radius);
      appearance: none;
      color: var(--env-form-input-font-color);
      font-size: 1em;
      min-height: calc(
         #{math.div(
               variable.$form-input-height,
               variable.$form-input-font-size
            ) *
            1em} - 2px
      );
      padding: variable.$form-padding-y 2em variable.$form-padding-y
         variable.$form-padding-x;

      @include focus.hide-focus-visible;
   }

   > .env-icon {
      pointer-events: none;
      display: block;
      position: absolute;
      top: 50%;
      right: 0.9375em;
      transform: translateY(-50%);
      width: 0.875em;
      height: 0.875em;
   }
}

// ----- Customizable Select - used in both Element & Component ---- //
// Certain browsers now allows styling of the select and the picker.
// Icons may be used inside options etc.
// https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Forms/Customizable_select

@supports (appearance: base-select) {
   $pickerIconWidth: 1.25em;

   select:not([multiple]).env-form-input:has(selectedcontent),
   .env-form-select select:not([multiple]):has(selectedcontent) {
      appearance: base-select;
      display: flex;
      gap: 0;
      justify-content: space-between;

      > button {
         display: block;
         white-space: nowrap;
         max-width: calc(100% - $pickerIconWidth);
         flex: 1 1 100%;
      }

      selectedcontent {
         display: block;
         max-width: 100%;
         overflow: hidden;
         text-overflow: ellipsis;
         line-height: 1.3;
      }

      &::picker(select) {
         appearance: base-select;
         max-width: 100%;
         font-size: var(--env-font-size-medium);
         background-color: var(--env-section-background-color);
         color: var(--env-font-color);
         border: variable.$border-width variable.$border-style
            var(--env-border-color-05);
         border-radius: var(--env-border-radius-medium);
         box-shadow: var(--env-box-shadow-small);
         padding: calc(var(--env-focus-size) + var(--env-focus-offset));
      }

      optgroup {
         font-weight: 600;
         padding: var(--env-spacing-x-small) 0 0;

         &:last-child {
            padding-bottom: var(--env-spacing-x-small);
         }
         option:first-of-type {
            margin-top: var(--env-spacing-x-small);
         }

         legend {
            font-weight: 600;
         }
      }

      option {
         display: block;
         padding: var(--env-spacing-x-small);
         max-width: 100%;
         overflow: hidden;
         text-overflow: ellipsis;

         &:hover,
         &.focus {
            background-color: var(--env-section-background-color-05);
            color: var(--env-font-color);
         }

         &:focus-visible {
            box-shadow: 0 0 0 var(--env-focus-offset)
               var(--env-focus-inner-color);
            outline: var(--env-focus-size) solid var(--env-focus-outline-color);
            outline-offset: var(--env-focus-offset);
         }
      }

      selectedcontent .env-icon,
      option .env-icon {
         width: 0.875em;
         height: 0.875em;
      }
   }

   select:not([multiple]).env-form-input:has(selectedcontent),
   .env-form-select:not(:has(> .env-icon))
      select:not([multiple]):has(selectedcontent) {
      &::picker-icon {
         color: var(--env-form-input-font-color);
         width: $pickerIconWidth;
         text-align: center;
         margin: 0;
      }
   }

   .env-form-select:not(:has(> .env-icon))
      select:not([multiple]):has(selectedcontent) {
      padding-right: variable.$form-padding-x;
   }

   .env-form-select:has(> .env-icon)
      select:not([multiple]):has(selectedcontent) {
      > button {
         max-width: 100%;
      }
      &::picker-icon {
         // Select component uses custom SVG-icon
         display: none;
      }
   }
}
