@use 'sass:color';

@use 'mixin/text';
@use 'variable';

.env-card {
   $secondary-opacity: 0.75;

   position: relative;
   display: flex;
   flex-direction: column;
   align-items: stretch;
   height: 100%;
   border-radius: var(--env-border-radius-medium);

   &__header {
      order: 1;
   }

   &__body {
      order: 2;
   }

   &__footer {
      order: 3;
   }

   &__header {
      padding: var(--env-spacing-large) var(--env-spacing-large)
         var(--env-spacing-x-small);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-content: center;
   }

   &__body {
      flex: 1 1 100%;
      padding: var(--env-spacing-large);

      .env-card__header ~ & {
         padding-top: 0;
      }
   }

   &__footer {
      padding: var(--env-spacing-x-small) var(--env-spacing-large)
         var(--env-spacing-large);

      .env-card__body ~ & {
         margin-top: calc(#{var(--env-spacing-large)} * -1);
      }
   }

   &__text {
      // Todo: Set deprecated?
      margin: var(--env-spacing-xx-small) 0;

      &--title {
         @include text.sitevision-site-font-override(
            var(--env-font-size-large),
            normal,
            variable.$font-weight-semibold,
            variable.$line-height-medium
         );
         margin: 0;
      }

      &--secondary {
         filter: opacity($secondary-opacity);
      }
   }

   &__image,
   .env-media {
      margin: var(--env-spacing-medium) 0;

      &:first-child {
         margin-top: 0;
      }
   }
}

.env-cardholder {
   display: flex;
   flex-wrap: wrap;
   align-content: stretch;
   justify-content: center;
   align-items: stretch;
   justify-items: stretch;
   margin: 0 calc(#{var(--env-cardholder-column-spacing)} / -2);

   &--start {
      justify-content: flex-start;
   }

   &__slot {
      box-sizing: border-box;
      padding: calc(#{var(--env-cardholder-column-spacing)} / 2);
      flex: 1 1 100%;
      min-width: var(--env-cardholder-column-min-width);

      .env-cardholder--8 & {
         flex: 1 1 12.5%;
      }

      .env-cardholder--6 & {
         flex: 1 1 16.6667%;
      }

      .env-cardholder--5 & {
         flex: 1 1 20%;
      }

      .env-cardholder--4 & {
         flex: 1 1 25%;
      }

      .env-cardholder--3 & {
         flex: 1 1 33.3333%;
      }

      .env-cardholder--2 & {
         flex: 1 1 50%;
      }

      .env-cardholder--max & {
         max-width: var(--env-cardholder-column-max-width);
      }

      .env-cardholder--max.env-cardholder--8 & {
         max-width: 12.5%;
      }

      .env-cardholder--max.env-cardholder--6 & {
         max-width: 16.6667%;
      }

      .env-cardholder--max.env-cardholder--5 & {
         max-width: 20%;
      }

      .env-cardholder--max.env-cardholder--4 & {
         max-width: 25%;
      }

      .env-cardholder--max.env-cardholder--3 & {
         max-width: 33.3333%;
      }

      .env-cardholder--max.env-cardholder--2 & {
         max-width: 50%;
      }
   }
}

.env-cardholder-grid {
   --ch-col-w: #{var(--env-cardholder-grid-column-width)};
   --ch-g: #{var(--env-cardholder-grid-gap)};
   display: grid;
   grid-template-columns: repeat(auto-fill, minmax(#{var(--ch-col-w)}, 1fr));
   grid-auto-rows: 1fr;
   gap: #{var(--ch-g)};
   margin: 0 auto;

   &--gap-none {
      --ch-g: 0em;
   }

   &--gap-small {
      --ch-g: calc(0.5 * #{var(--env-cardholder-grid-gap)});
   }

   &--gap-large {
      --ch-g: calc(2 * #{var(--env-cardholder-grid-gap)});
   }

   &--column-small {
      --ch-col-w: calc(0.75 * #{var(--env-cardholder-grid-column-width)});
   }

   &--column-large {
      --ch-col-w: calc(1.25 * #{var(--env-cardholder-grid-column-width)});
   }

   $cols: 2, 3, 4, 5, 6, 8;

   @each $col in $cols {
      &--#{$col} {
         max-width: calc(
            #{var(--ch-col-w)} * #{$col + 1} + #{var(--ch-g)} * #{$col} - 1px
         );
      }
   }

   .env-cardholder__slot {
      min-width: 0;
      max-width: none;
      padding: 0;
   }
}
