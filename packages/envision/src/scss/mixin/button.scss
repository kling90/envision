@use 'sass:map';

@use '../variable';

@use 'sass:math';

@mixin squareIconButton($modifier: '') {
   &.env-button--icon#{$modifier}:not(.env-button--icon-after):not(
         .env-button--icon-before
      ):not(.env-button--icon-around):not(.env-button--icon-above) {
      @content;
   }
}

@mixin iconAboveButton(
   $fontSize,
   $height,
   $padding,
   $paddingLink,
   $borderRadius,
   $iconSize,
   $iconSizeLink
) {
   &.env-button--icon-above {
      font-size: calc(#{var(--env-font-size-medium)} * #{$fontSize});
      line-height: 1;
      align-items: flex-end;
      min-height: $height;
      min-width: $height;
      border-radius: $borderRadius;
      padding: 0 $padding $padding;

      .env-icon {
         margin: 0 !important;
         width: $iconSize !important;
         height: $iconSize !important;
         top: $padding;
      }

      &.env-button--link {
         padding: 0 $paddingLink $paddingLink;

         .env-icon {
            width: $iconSize * 1.25 !important;
            height: $iconSize * 1.25 !important;
            top: $paddingLink;
         }
      }
   }
}

@mixin button-base() {
   appearance: none;
   border: variable.$border-width variable.$border-style;
   box-sizing: border-box;
   cursor: pointer;
   display: inline-flex;
   align-items: center;
   justify-content: center;
   font-family: var(--env-button-font-family);
   margin: 0;
   text-align: center;
   text-decoration: none;
   user-select: none;
   vertical-align: middle;
   line-height: variable.$button-line-height;

   // Reset inner elements in apps
   > span:not([class]):not([style]),
   > div:not([class]):not([style]) {
      line-height: 1;
   }
}

@mixin button-color-variant(
   $name: '',
   $background-color: '',
   $background-color-hover: '',
   $font-color: ''
) {
   @if ($name != '') {
      $name: '-#{$name}';
   }
   @if ($background-color == '') {
      $font-color: 'element#{$name}-font-color';
      $background-color: 'element#{$name}-background-color';
      $background-color-hover: 'element#{$name}-background-color-dark';
   }
   & {
      background-color: var(--env-#{$background-color});
      border-color: var(--env-#{$background-color});
      color: var(--env-#{$font-color});
   }

   // Dark border for dropdown split button
   .env-dropdown.env-button-group &:not(:first-child):not(.env-button--ghost) {
      border-left-color: var(--env-#{$background-color-hover});
   }

   &.env-button--ghost {
      background-color: transparent;
      border-color: var(--env-#{$background-color});
      color: var(--env-#{$background-color});
   }

   &:hover,
   &:focus {
      background-color: var(--env-#{$background-color-hover});
      border-color: var(--env-#{$background-color-hover});
      color: var(--env-#{$font-color});
   }

   &:active {
      background-color: var(--env-#{$background-color});
      border-color: var(--env-#{$background-color-hover});
      color: var(--env-#{$font-color});
   }
}

@mixin button-size($size) {
   $button-border-radius: 0.375;

   // Button font sizes (px)
   $btn-small-font-size: 14; // --env-font-size-small
   $btn-medium-font-size: 16; // --env-font-size-medium
   $btn-large-font-size: 20; // --env-font-size-large
   $btn-iconabove-font-size: 12; // (Not available as a variable)

   // Button border-radius setting in Sitevision (em)
   $btn-default-border-radius: 0.375; // --env-button-border-radius

   // Border radiuses for buttons (px)
   $btn-small-border-radius: 3;
   $btn-medium-border-radius: 6;
   $btn-large-border-radius: 10;

   // Horizontal paddings for buttons (px)
   $btn-small-padding: 8;
   $btn-medium-padding: 21;
   $btn-large-padding: 23;
   $btn-slim-padding: 8;
   $btn-iconabove-padding: 10;
   $btn-iconabove-link-padding: 8;

   // Default button heights (px)
   $btn-small-min-height: variable.$form-input-height * 0.5; // 22
   $btn-medium-min-height: variable.$form-input-height; // 44
   $btn-large-min-height: variable.$form-input-height * 1.27273; // 56
   $btn-slim-min-height: 32; // Old default button height

   // Radius - scaled relative to variable in settings (0.375em default),
   // Calculation:
   // (3 / 16 / 0.375) / (14 / 16) = 0.5714285714
   // ([radius in px] / [browser-font-size] / [base-font-size in px]) / ([button-font-size in px] / [browser-font-size])
   /* prettier-ignore */
   $radiusScales: (
      // small =>  3px (default)
      small: math.div(math.div(math.div($btn-small-border-radius, variable.$BROWSER_FONT_SIZE), $button-border-radius), math.div($btn-small-font-size, variable.$BROWSER_FONT_SIZE)),
      // medium =>  6px (default)
      medium: math.div(math.div($btn-medium-border-radius, variable.$BROWSER_FONT_SIZE), $button-border-radius),
      // large => 10px (default)
      large: math.div(math.div(math.div($btn-large-border-radius, variable.$BROWSER_FONT_SIZE), $button-border-radius), math.div($btn-large-font-size, variable.$BROWSER_FONT_SIZE)),
      // slim => 6px  (Same as medium),
      slim: math.div(math.div($btn-medium-border-radius, variable.$BROWSER_FONT_SIZE), $button-border-radius)
   );
   $minHeights: (
      small: (
         math.div($btn-small-min-height, $btn-small-font-size) * 1em,
      ),
      medium: (
         math.div($btn-medium-min-height, $btn-medium-font-size) * 1em,
      ),
      large: (
         math.div($btn-large-min-height, $btn-large-font-size) * 1em,
      ),
      slim: (
         math.div($btn-slim-min-height, $btn-medium-font-size) * 1em,
      ),
   );
   $fontSizes: (
      // small => 14 px
      small: 'font-size-small',
      // medium => 16 px
      medium: 'font-size-medium',
      // large => 20 px
      large: 'font-size-large',
      slim: 'font-size-medium'
   );
   $paddingsX: (
      small: math.div($btn-small-padding, $btn-small-font-size) * 1em,
      medium: math.div($btn-medium-padding, $btn-medium-font-size) * 1em,
      large: math.div($btn-large-padding, $btn-large-font-size) * 1em,
      slim: math.div($btn-small-padding, $btn-medium-font-size) * 1em,
   );
   // Icon size in em:
   // [icon-size in px] / [relative-button-font-size] / [base-font-size in px] * 1em
   /* prettier-ignore */
   $iconSizes: (
      small: math.div(math.div(9, math.div($btn-small-font-size, variable.$BROWSER_FONT_SIZE)), variable.$BROWSER_FONT_SIZE) * 1em,
      medium: math.div(18, variable.$BROWSER_FONT_SIZE) * 1em,
      large: math.div(math.div(22, math.div($btn-large-font-size, variable.$BROWSER_FONT_SIZE)), variable.$BROWSER_FONT_SIZE) * 1em,
      slim: math.div(15, variable.$BROWSER_FONT_SIZE) * 1em,
   );

   /* prettier-ignore */
   $smallIconSizes: (
      small: math.div(math.div(6, math.div($btn-small-font-size, variable.$BROWSER_FONT_SIZE)), variable.$BROWSER_FONT_SIZE) * 1em,
      medium: math.div(12, variable.$BROWSER_FONT_SIZE) * 1em,
      large: math.div(math.div(15, math.div($btn-large-font-size, variable.$BROWSER_FONT_SIZE)), variable.$BROWSER_FONT_SIZE) * 1em,
      slim: math.div(12, variable.$BROWSER_FONT_SIZE) * 1em,
   );

   $font-size: map.get($fontSizes, $size);
   $padding-x: map.get($paddingsX, $size);
   $icon-size: map.get($iconSizes, $size);
   $small-icon-size: map.get($smallIconSizes, $size);
   $radius-scale: map.get($radiusScales, $size);
   $min-height: map.get($minHeights, $size);

   font-size: var(--env-#{$font-size});
   padding: 0 $padding-x;
   border-radius: calc(#{var(--env-button-border-radius)} * #{$radius-scale});
   min-height: $min-height;

   @include squareIconButton {
      height: $min-height;
      width: $min-height;
      padding: calc(#{$min-height} - 2px) 0 0; // Compensate for border
   }

   &.env-button--icon .env-icon {
      width: #{$icon-size};
      height: #{$icon-size};
      margin: #{math.div($icon-size, -2)} 0 0 0;
   }

   &.env-button--icon-before {
      padding-left: calc(#{$padding-x} + #{$icon-size} + #{$padding-x * 0.5});

      .env-icon {
         left: $padding-x;
      }

      &.env-button--block {
         padding-left: $padding-x;

         .env-icon {
            position: relative;
            left: 0;
            top: auto;
            margin: 0 0.5em 0 0;
         }
      }
   }

   &.env-button--icon-after {
      padding-right: calc(#{$padding-x} + #{$icon-size} + #{$padding-x * 0.5});

      .env-icon {
         right: $padding-x;
      }

      &.env-button--block {
         padding-right: $padding-x;

         .env-icon {
            position: relative;
            right: 0;
            top: auto;
            margin: 0 0 0 0.5em;
         }
      }
   }

   &.env-button--icon-around {
      padding-left: calc(#{$padding-x} + #{$icon-size} + #{$padding-x * 0.5});
      padding-right: calc(#{$padding-x} + #{$icon-size} + #{$padding-x * 0.5});

      .env-icon:first-child {
         left: $padding-x;
      }

      .env-icon:last-child {
         right: $padding-x;
      }

      &.env-button--block {
         padding-left: $padding-x;
         padding-right: $padding-x;

         .env-icon {
            position: relative;
            top: auto;

            &:first-child {
               left: 0;
               margin: 0 0.5em 0 0;
            }

            &:last-child {
               right: 0;
               margin: 0 0 0 0.5em;
            }
         }
      }
   }

   @if ($size == 'medium') {
      $fontSize: math.div(
         $btn-iconabove-font-size,
         variable.$BROWSER_FONT_SIZE
      );
      $borderRadiusScale: math.div(
         math.div(
            math.div($btn-medium-border-radius, variable.$BROWSER_FONT_SIZE),
            $button-border-radius
         ),
         math.div($btn-iconabove-font-size, variable.$BROWSER_FONT_SIZE)
      );
      @include iconAboveButton(
         $fontSize,
         math.div($btn-medium-min-height, $btn-iconabove-font-size) * 1em,
         // Height
         math.div(math.div(4, variable.$BROWSER_FONT_SIZE), $fontSize) * 1em,
         // Padding
         math.div(math.div(1, variable.$BROWSER_FONT_SIZE), $fontSize) * 1em,
         // Padding Link
         calc(#{var(--env-button-border-radius)} * #{$borderRadiusScale}),
         // Border Radius
         math.div(
               math.div(
                  16,
                  math.div(
                     $btn-iconabove-font-size,
                     variable.$BROWSER_FONT_SIZE
                  )
               ),
               variable.$BROWSER_FONT_SIZE
            ) *
            1em,
         // Icon size
         math.div(
               math.div(
                  20,
                  math.div(
                     $btn-iconabove-font-size,
                     variable.$BROWSER_FONT_SIZE
                  )
               ),
               variable.$BROWSER_FONT_SIZE
            ) *
            1em // Icon size Link
      );
   }

   @if ($size == 'large') {
      $fontSize: math.div(
         $btn-iconabove-font-size,
         variable.$BROWSER_FONT_SIZE
      );
      $borderRadiusScale: math.div(
         math.div(
            math.div($btn-large-border-radius, variable.$BROWSER_FONT_SIZE),
            $button-border-radius
         ),
         math.div($btn-iconabove-font-size, variable.$BROWSER_FONT_SIZE)
      );
      @include iconAboveButton(
         $fontSize,
         math.div($btn-large-min-height, $btn-iconabove-font-size) * 1em,
         math.div(math.div(8, variable.$BROWSER_FONT_SIZE), $fontSize) * 1em,
         math.div(math.div(4, variable.$BROWSER_FONT_SIZE), $fontSize) * 1em,
         calc(#{var(--env-button-border-radius)} * #{$borderRadiusScale}),
         math.div(
               math.div(
                  20,
                  math.div(
                     $btn-iconabove-font-size,
                     variable.$BROWSER_FONT_SIZE
                  )
               ),
               variable.$BROWSER_FONT_SIZE
            ) *
            1em,
         math.div(
               math.div(
                  24,
                  math.div(
                     $btn-iconabove-font-size,
                     variable.$BROWSER_FONT_SIZE
                  )
               ),
               variable.$BROWSER_FONT_SIZE
            ) *
            1em
      );
   }

   @include squareIconButton {
      .env-icon {
         margin: #{math.div($icon-size, -2)} 0 0 #{math.div($icon-size, -2)};
      }
   }

   // Small icons

   &.env-button--icon-small.env-button--icon .env-icon {
      width: #{$small-icon-size};
      height: #{$small-icon-size};
      margin: #{math.div($small-icon-size, -2)} 0 0 0;
   }

   &.env-button--icon-small.env-button--icon-before {
      padding-left: calc(
         #{$padding-x} + #{$small-icon-size} + #{$padding-x * 0.5}
      );
   }

   &.env-button--icon-small.env-button--icon-after {
      padding-right: calc(
         #{$padding-x} + #{$small-icon-size} + #{$padding-x * 0.5}
      );
   }

   @include squareIconButton('-small') {
      .env-icon {
         margin: #{math.div($small-icon-size, -2)} 0 0
            #{math.div($small-icon-size, -2)};
      }
   }
}
